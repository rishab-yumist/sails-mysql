{
  "name": "sails-mysql-live-select",
  "version": "0.1.1",
  "description": "MySQL Live Select for Sails.js",
  "main": "lib/adapter.js",
  "scripts": {
    "test": "cd test && rm -f node_modules && ln -s ../node_modules node_modules && cd .. && node test/app.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rishab-yumist/sails-mysql-live-select.git"
  },
  "keywords": [
    "mysql",
    "live",
    "select",
    "sails"
  ],
  "author": {
    "name": "Ben Green"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "mysql-live-select": "git+https://git@github.com/rishab-yumist/mysql-live-select.git",
    "sails-mysql": "^0.11.0",
    "waterline-errors": "~0.10.0",
    "waterline-sequel": "~0.5.0"
  },
  "devDependencies": {
    "colors": "^1.1.2",
    "ejs": "~0.8.4",
    "grunt": "0.4.2",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-coffee": "~0.10.1",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-cssmin": "~0.9.0",
    "grunt-contrib-jst": "~0.6.0",
    "grunt-contrib-less": "0.11.1",
    "grunt-contrib-uglify": "~0.4.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-sails-linker": "~0.9.5",
    "grunt-sync": "~0.0.4",
    "include-all": "~0.1.3",
    "rc": "~0.5.0",
    "sails": "~0.11.2",
    "sails-disk": "~0.10.0",
    "sails-mysql": "^0.11.0",
    "sails-mysql-live-select": "^0.1.0"
  },
  "gitHead": "fed43af4764fdd7c818aebec94a9b92cc5aeb237",
  "readme": "# sails-mysql-live-select [![Build Status](https://travis-ci.org/numtel/sails-mysql-live-select.svg?branch=master)](https://travis-ci.org/numtel/sails-mysql-live-select)\n\nA [Sails](http://sailsjs.org) connection adapter to use [the `mysql-live-select` NPM Package](https://github.com/numtel/mysql-live-select) in order to provide live (real time) result sets for models.\n\n## Example\n\nSee the [chat room example application](https://github.com/numtel/sails-mysql-live-select-chat-example) for a full working demonstration of this package.\n\n## Installation\n\nTo be used alongside the [`sails-mysql` connection adapter](https://github.com/balderdashy/sails-mysql).\n\n### MySQL server configuration\n\nA MySQL server properly configured to output the binary log in `ROW` mode is required to use this adapter:\n\n* Enable MySQL binlog in `my.cnf`, restart MySQL server after making the changes.\n\n  ```\n  # binlog config\n  server-id        = 1\n  binlog_format    = row\n  log_bin          = /var/log/mysql/mysql-bin.log\n  binlog_do_db     = employees   # optional\n  expire_logs_days = 10          # optional\n  max_binlog_size  = 100M        # optional\n  ```\n* Create an account with replication privileges:\n\n  ```sql\n  GRANT REPLICATION SLAVE, REPLICATION CLIENT, SELECT ON *.* TO 'user'@'localhost'\n  ```\n\n### Package installation\n\n1. Install the package:\n\n    ```bash\n    npm install --save sails-mysql-live-select\n    ```\n\n2. Add the connection settings to your `config/connections.js`:\n\n    ```javascript\n      liveMysql: {\n        adapter: 'sails-mysql-live-select',\n        host: '127.0.0.1',\n        // This user must have REPLICATION SLAVE, REPLICATION CLIENT and SELECT\n        // privileges.\n        user: 'USERNAME',\n        password: 'PASSWORD',\n        database: 'DATABASE',\n        // Other settings used by mysql-live-select\n        serverId: [Unique positive integer 1 - 2^32, default 1337]\n        minInterval: [Minimum time in milliseconds between refresh]\n      }\n    ```\n\n3. Add the adapter to be used on your models, for example in `config/models.js`:\n\n    ```javascript\n      connection: [ 'mysql', 'liveMysql' ],\n    ```\n\n## Usage\n\n### YourModel.liveFind(options, [condition])\n\nThis adapter adds a `liveFind` method to your models.\n\nArgument | Type | Description\n----------|------|-----------\n`options` | Object | Find options as defined by [Waterline Query Language](http://sailsjs.org/documentation/concepts/models-and-orm/query-language)\n`condition` | Function | Optional function for validating if result set should be refreshed on row change. See [condition function documentation for mysql-live-select](https://github.com/numtel/mysql-live-select#condition-function)\n\nThe `liveFind` method returns a [`LiveMysqlSelect` object as defined by mysql-live-select](https://github.com/numtel/mysql-live-select#livemysqlselect-object).\n\nFor example, listen for the `update` event in your controller actions to send changes to the client:\n\n```javascript\nvar myLiveSelect = MyModel.liveFind({},\n  function(row, newRow, rowDeleted) {\n    // Optional data invalidation callback\n    // Check if data is invalidated by this row change\n    console.log('Row data', row);\n    return true;\n  }\n).on('update',\n  function(diff, data) {\n    // Results have changed, send to client\n    sails.sockets.emit(req.socket.id, 'chatDiff', diff);\n  }\n);\n```\n\nWhen done listening for updates to a query, be sure to call the `stop()` method on the returned `LiveMysqlSelect` object to prevent memory leaks.\n\n## Running Tests\n\n```bash\n# Configure MySQL server settings\nvim test/config/connections.js\n# Run suite\nnpm test\n```\n\nTest execution code is in [`test/config/bootstrap.js`](test/config/bootstrap.js).\n\n## License\n\nMIT\n",
  "bugs": {
    "url": "https://github.com/rishab-yumist/sails-mysql-live-select/issues"
  },
  "homepage": "https://github.com/rishab-yumist/sails-mysql-live-select#readme",
  "_id": "sails-mysql-live-select@0.1.1",
  "_shasum": "97257aa2cac41ca97639efb6706c96a7e46a8a91",
  "_from": "git+https://git@github.com/rishab-yumist/sails-mysql-live-select.git",
  "_resolved": "git+https://git@github.com/rishab-yumist/sails-mysql-live-select.git#fed43af4764fdd7c818aebec94a9b92cc5aeb237"
}
